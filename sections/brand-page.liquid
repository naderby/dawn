<link rel="stylesheet" href="{{ 'section-main-page.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-rte.css' | asset_url }}" media="print" onload="this.media='all'">

<noscript>{{ 'section-main-page.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-rte.css' | asset_url | stylesheet_tag }}</noscript>

<div class="page-width page-width--narrow">

{% assign linklist = linklists["brands"] %}
{% assign collections_per_row = settings.frontpage_collections_per_row %}

<div class="twelve columns collection-list">
  <h1 class="page-title">{{page.title | escape}}</h1>
    {{ page.content }}

  
<ul class="block-grid mobile four-up product-collection">    
{% for link in linklist.links %}
<li>
  <div class="product">
  {% comment %}
 You can connect collections, products, pages, & even blogs. By default it will use the first product that appears on a collection or you can pick a featured image.
  {% endcomment %}

  {% assign link_item = link.object %}
  {% assign link_image = '' %}
  {% capture link_title %}{{ link.title | escape }}{% endcapture %}

  {% if link.type == 'collection_link' %}
    {% if link_item.image %}
      {% assign link_image = link_item.image.src | collection_img_url: 'medium' %} 
    {% else %}//Otherwise
      {% assign link_image = link_item.products.first.featured_image | product_img_url: 'medium' %}//Grab the first product image and use that as the image
    {% endif %}
  {% elsif link.type == 'product_link' %}
    {% assign link_image = link_item.featured_image | product_img_url: 'medium' %}
  {% elsif link.type == 'page_link' %}
    {% if link_item.content contains "<img" %}
      {% assign src = link_item.content | split: 'src="' %}
      {% assign src = src[1] | split: '"' | first | replace: '//cdn', 'http://cdn' | replace: 'http:http://', 'http://' | remove: 'https:'  %}
      {% if src %}//if there is a src 
        {% assign link_image = src %}
      {% endif %}
    {% endif %}
  {% elsif link.type == 'blog_link' %}//Otherwise if link.type is a blog link
    {% if link_item.articles.first.content contains "<img" %}//And if the blog content contains an image tag
      {% assign src = link_item.articles.first.content | split: 'src="' %}//Then create a new variable to src 
      {% assign src = src[1] | split: '"' | first | replace: '//cdn', 'http://cdn' | replace: 'http:http://', 'http://' | remove: 'https:'  %}//Create a new variable for src[1] use '"' substring as a parameter and replace '//cdn' with 'http://cdn' then replace 'http:http://' then finally remove 'https:'
      {% if src %}//if src is present 
        {% assign link_image = src %}//then create a new variable for link_image using src
      {% endif %}
    {% endif %}
  {% endif %}

<a href="{{ link_item.url }}" title="{{ link_title }}">//Here is where it all comes together make the link_item.url click-able and link to the content and add the title using link_title 
    <span class="thumbnail">
      {% if link_image != '' %} //if link_image does not equal '' then continue to the next step 
        <img {% if settings.align_height %}style="max-height:{{ settings.collection_height }}px"{% endif %} src="{{ link_image }}" alt="{{ link_title }}" />//check if there are settings for align_height if so add it to the style otherwise just get the link_image and make the alt tag the link title
      {% endif %}
    </span>

    <span class="product-title">
      {{ link_title }} //add the link title  (it's click-able)
    </span>
  </a>

  </div>
</li>
{% endfor %}
</ul>
  
  
  
  
  </div>
  
  
  <h1 class="main-page-title page-title h0">
    {{ page.title | escape }}
  </h1>
  <div class="rte">
    {{ page.content }}
  </div>
</div>

{% schema %}
{
  "name": "t:sections.brand-page.name",
  "tag": "section",
  "class": "spaced-section"
}
{% endschema %}
